name: "Security Scan: Bandit + pip-audit (Windows)"

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  security_scan:
    runs-on: windows-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'


      #########################################
      #         BANDIT SECURITY SCAN         #
      #########################################
      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit Scan (generate JSON and HTML, always exit 0)
        run: |
          bandit -r . -f json -o bandit-report.json --exit-zero
          bandit -r . -f html -o bandit-report.html --exit-zero

      - name: Create Bandit High Severity Checker Script
        shell: pwsh
        run: |
          $script = @"
          import json
          import sys

          report_path = sys.argv[1]

          with open(report_path) as f:
              data = json.load(f)

          issues = data.get('results', [])
          high_severity = [i for i in issues if i.get('issue_severity') == 'HIGH']

          if high_severity:
              print(f'Found {len(high_severity)} HIGH severity issue(s):')
              for issue in high_severity:
                  print(f'- {issue.get("filename")}:{issue.get("line_number")} -> {issue.get("issue_text")}')
              sys.exit(0)  # DO NOT fail pipeline
          else:
              print('âœ… No HIGH severity issues found.')
              sys.exit(0)
          "@
          $script | Out-File -Encoding utf8 check_bandit_high_severity.py

      - name: Check for High Severity Issues in Bandit Report
        shell: pwsh
        continue-on-error: true
        run: python check_bandit_high_severity.py bandit-report.json

      #########################################
      #       DEPENDENCY VULNERABILITY SCAN   #
      #########################################
      - name: Install pip-audit
        run: pip install pip-audit

      - name: Run pip-audit and save report
        run: |
          pip-audit -f json -o pip-audit-report.json || echo "pip-audit found issues, continuing..."

      #########################################
      #              UPLOAD REPORTS           #
      #########################################
      - name: Upload Bandit and pip-audit Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            bandit-report.json
            bandit-report.html
            pip-audit-report.json
